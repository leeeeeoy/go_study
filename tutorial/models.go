// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.21.0

package tutorial

import (
	"database/sql"
	"time"

	"github.com/google/uuid"
)

type Bookmark struct {
	ID        uuid.UUID     `json:"id"`
	CreatedAt time.Time     `json:"created_at"`
	PostID    uuid.NullUUID `json:"post_id"`
	UserID    uuid.NullUUID `json:"user_id"`
}

type Category struct {
	ID        uuid.UUID `json:"id"`
	Name      string    `json:"name"`
	CreatedAt time.Time `json:"created_at"`
}

type CommentLike struct {
	ID        uuid.UUID     `json:"id"`
	CreatedAt time.Time     `json:"created_at"`
	CommentID uuid.NullUUID `json:"comment_id"`
	UserID    uuid.NullUUID `json:"user_id"`
}

type CommentMention struct {
	ID        uuid.UUID     `json:"id"`
	CommentID uuid.NullUUID `json:"comment_id"`
	UserID    uuid.NullUUID `json:"user_id"`
}

type CommentReport struct {
	ID           uuid.UUID      `json:"id"`
	Desc         sql.NullString `json:"desc"`
	Status       interface{}    `json:"status"`
	CreatedAt    time.Time      `json:"created_at"`
	UpdatedAt    time.Time      `json:"updated_at"`
	CommentID    uuid.NullUUID  `json:"comment_id"`
	ReportTypeID uuid.NullUUID  `json:"report_type_id"`
	ReporterID   uuid.NullUUID  `json:"reporter_id"`
}

type Hashtag struct {
	ID        uuid.UUID `json:"id"`
	Value     string    `json:"value"`
	UsedCount int64     `json:"used_count"`
	CreatedAt time.Time `json:"created_at"`
}

type Post struct {
	ID           uuid.UUID      `json:"id"`
	Title        string         `json:"title"`
	Contents     string         `json:"contents"`
	LikeCount    int64          `json:"like_count"`
	CommentCount int64          `json:"comment_count"`
	ViewCount    int64          `json:"view_count"`
	ReportCount  int64          `json:"report_count"`
	Status       interface{}    `json:"status"`
	Private      bool           `json:"private"`
	LanguageType string         `json:"language_type"`
	Attachments  sql.NullString `json:"attachments"`
	CreatedAt    time.Time      `json:"created_at"`
	UpdatedAt    time.Time      `json:"updated_at"`
	TopicID      uuid.NullUUID  `json:"topic_id"`
	UserID       uuid.NullUUID  `json:"user_id"`
}

type PostComment struct {
	ID           uuid.UUID     `json:"id"`
	Contents     string        `json:"contents"`
	LikeCount    int64         `json:"like_count"`
	Status       interface{}   `json:"status"`
	ReportCount  int64         `json:"report_count"`
	LanguageType string        `json:"language_type"`
	AuthorHeart  bool          `json:"author_heart"`
	CreatedAt    time.Time     `json:"created_at"`
	UpdatedAt    time.Time     `json:"updated_at"`
	PostID       uuid.NullUUID `json:"post_id"`
	UserID       uuid.NullUUID `json:"user_id"`
}

type PostHashtag struct {
	ID        uuid.UUID     `json:"id"`
	PostID    uuid.NullUUID `json:"post_id"`
	HashtagID uuid.NullUUID `json:"hashtag_id"`
}

type PostLike struct {
	ID        uuid.UUID     `json:"id"`
	CreatedAt time.Time     `json:"created_at"`
	PostID    uuid.NullUUID `json:"post_id"`
	UserID    uuid.NullUUID `json:"user_id"`
}

type PostReport struct {
	ID           uuid.UUID      `json:"id"`
	Comments     sql.NullString `json:"comments"`
	Status       interface{}    `json:"status"`
	CreatedAt    time.Time      `json:"created_at"`
	UpdatedAt    time.Time      `json:"updated_at"`
	PostID       uuid.NullUUID  `json:"post_id"`
	ReportTypeID uuid.NullUUID  `json:"report_type_id"`
	ReporterID   uuid.NullUUID  `json:"reporter_id"`
}

type ReportType struct {
	ID          uuid.UUID      `json:"id"`
	Description sql.NullString `json:"description"`
	InActive    bool           `json:"in_active"`
	OrderNum    int64          `json:"order_num"`
}

type Topic struct {
	ID         uuid.UUID     `json:"id"`
	Name       string        `json:"name"`
	CreatedAt  time.Time     `json:"created_at"`
	CategoryID uuid.NullUUID `json:"category_id"`
}

type User struct {
	ID        uuid.UUID `json:"id"`
	Email     string    `json:"email"`
	Password  string    `json:"password"`
	Username  string    `json:"username"`
	CreatedAt time.Time `json:"created_at"`
}
